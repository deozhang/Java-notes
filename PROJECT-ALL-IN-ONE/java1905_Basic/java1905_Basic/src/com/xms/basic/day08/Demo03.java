package com.xms.basic.day08;
/**
 * 子类中出现和父类中相同名字的成员变量：就近原则
 * 子类中出现和父类中不相同名字的成员变量：继承（非私有）
 * 
 * 重写：发生在两个类中（子父类），子类中出现和父类中方法名，
 * 			参数列表，返回值都相同，只是方法体不同，称之为重写
 * 重写的应用场景：当子类需要父类的功能，但是子类根据自己的特殊情况
 * 								有自己的实现方法（方法体不同），可以重写父类中的
 * 								方法
 * 如果子类重写了父类中的方法，在使用向上造型时，即使用父类型的引用变量
 * 	去调用被子类重写的方法时，最终调用的是子类覆盖后的方法
 * 
 * 注意事项：
 * 			1.父类中的私有方法不能被子类重写（私有方法不能被继承）
 * 			2.子类重写父类中 的方法时，权限修饰符要大于等于父类中方法的权限修饰符
 * 					public>protected>默认的>private
 * 			3.父类中的静态方法，子类如果想要重写，则子类也必须为静态方法
 * 
 *重载和重写：
 *		overload:重载
 *			--发生在一个类中，方法名相同，参数列表不同，与返回值无关
 *		override:重写
 *			--发生在两个类中（子父类），子类中出现和父类中方法名，参数列表
 *			  返回值都相同，方法体不同语法现象
 *		
 * @author Administrator
 *
 */
public class Demo03 {
	public static void main(String[] args) {
		Animal animal=new Animal();
		animal.work();
		Dog dog=new Dog();
		dog.work();
		
		//向上造型
		Animal anDog=new Dog();
		anDog.work1();
		anDog.work();
		
	}

}












